# disabled for now, keeping this config around
# for automated testing later
name: clojure

on:
  push:
    branches:
      - staging

jobs:
  deploy-jar-to-staging:
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: cache yarn
        id: cache-yarn
        uses: actions/cache@v1
        with:
          path: node_modules
          key: v2-yarn-${{ hashFiles('**/yarn.lock')}}
          restore-keys: v2-yarn

      - name: cache classpath
        id: cache-classpath
        uses: actions/cache@v2
        with:
          path: |
            .cpcache
            ~/.m2/repository
          key: v1-deps-${{ hashFiles('**/deps.edn')}}
          restore-keys: v1-deps

      - name: cache shadow-cljs
        uses: actions/cache@v1
        with:
          path: .shadow-cljs
          key: v1-shadow-cljs-${{github.sha}}
          restore-keys: v1-shadow-cljs

      - name: cache heroku
        uses: actions/cache@v1
        with:
          path: ~/.local/share/heroku/client
          key: v0-heroku

      - name: Install java
        uses: actions/setup-java@v1
        with:
          java-version: '11.0.7'

      - name: Install clojure
        uses: DeLaGuardo/setup-clojure@2.0
        with:
          tools-deps: '1.10.1.483'

      - name: Yarn
        if: steps.cache-yarn.outputs.cache-hit != 'true'
        run: yarn
      - name: Shadow-cljs
        run: yarn shadow-cljs release web --debug

      - name: Install Heroku java plugin
        run: yarn heroku plugins:install java
      - name: clj classes dir
        run: mkdir ./classes
      - name: clj deps
        if: steps.cache-classpath.outputs.cache-hit != 'true'
        run: clojure -Spath
      - name: clj AOT
        run: clojure -e "(compile 'org.sparkboard.server.server)"
      - name: clj jar
        run: clojure -A:build
      - name: Heroku deploy
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: bin/deploy
      - name: print logs on failure
        if: ${{ failure() }}
        run: files=(/tmp/clojure-*) && cat $files


